apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.reactiveprogrammingusingrxjava2"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true
            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //or
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'debug_proguard.txt'
        }
        debugWithoutProguardEnabled {
            minifyEnabled false
            debuggable true
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //or
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'debug_proguard.txt'
        }
    }
//    flavorDimensions "testFlavorDimension"
//
//    buildTypes.each { it.buildConfigField 'String', 'OPEN_WEATHER_MAP_API_KEY',' "11111111111111111111111"' }
//
//    productFlavors{
//        free{
//            buildConfigField "String", "ENABLE_CRASHLYTICS", '"true"'
//            dimension "testFlavorDimension"
//        }
//
//        paid{
//            dimension "testFlavorDimension"
//        }
//    }
    compileOptions {    //enables java 8 features like lambda....confirm this
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    //multi-dex
    implementation 'com.android.support:multidex:1.0.3'

    //RxJava2 : rx-android and rx-java
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
    implementation 'io.reactivex.rxjava2:rxjava:2.2.7'

    //Retrofit dependencies from /libs
    /*implementation files('libs/retrofit-2.5.0.jar')
    implementation files('libs/okhttp-3.14.0.jar')
    implementation files('libs/okio-2.2.2.jar')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.21'
    implementation files('libs/gson-2.8.5.jar')*/


    //Retrofit dependency
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    //from retrofit 2.0 converter is a must Ex: Gson, Moshi...In code add it in .addConverterFactory()
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    //To see requests and responses in LogCat
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    //An Adapter for adapting RxJava 2.x types.
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'

    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'

    //view-model
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "android.arch.lifecycle:viewmodel:1.1.1"
}